/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/lament-final-opt.glb -t -r public
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Face1: THREE.Mesh
    Face3: THREE.Mesh
    Face4: THREE.Mesh
    Face5: THREE.Mesh
    Face6: THREE.Mesh
    Face2: THREE.Mesh
  }
  materials: {
    wood272k: THREE.MeshStandardMaterial
    brass4k: THREE.MeshStandardMaterial
  }
}

export default function LamentTS(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/lament-final-opt.glb') as GLTFResult

  return ( 
    <group {...props} dispose={null}>
      <mesh castShadow geometry={nodes.Cube.geometry} material={materials.wood272k} position={[0, 1.01, 0]} />
      <mesh castShadow geometry={nodes.Face1.geometry} material={materials.brass4k} position={[0.01, 2.01, 0]} scale={[18.65, 7.06, 18.66]} />
      <mesh castShadow geometry={nodes.Face3.geometry} material={materials.brass4k} position={[-1, 1.01, -0.03]} rotation={[0, 0, -Math.PI / 2]} scale={[18.7, 0.19, 18.66]} />
      <mesh castShadow geometry={nodes.Face4.geometry} material={materials.brass4k} position={[0, 1.02, 1]} rotation={[Math.PI / 2, -Math.PI / 2, 0]} scale={[18.65, 0.16, 18.65]} />
      <mesh castShadow geometry={nodes.Face5.geometry} material={materials.brass4k} position={[1, 1.02, -0.03]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[18.65, 0.15, 18.66]} />
      <mesh castShadow geometry={nodes.Face6.geometry} material={materials.brass4k} position={[-0.02, 1.02, -1]} rotation={[Math.PI / 2, -Math.PI / 2, 0]} scale={[18.65, 0.12, 18.66]} />
      <mesh castShadow geometry={nodes.Face2.geometry} material={materials.brass4k} position={[0.01, 0.01, 0]} scale={[18.65, 7.06, 18.66]} />
    </group>
  )
}

useGLTF.preload('/lament-final-opt.glb')
